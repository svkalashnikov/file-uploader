export class Video extends Block {
    togglePlay(): void;
    toggleFullscreen(): void;
    toggleCaptions(): void;
    toggleSound(): void;
    setVolume(val: any): void;
    /** @type {HTMLElement} */
    get progress(): HTMLElement;
    init$: {
        src: string;
        ppIcon: string;
        fsIcon: string;
        volIcon: string;
        capIcon: string;
        totalTime: string;
        currentTime: string;
        progressCssWidth: string;
        hasSubtitles: boolean;
        volumeDisabled: boolean;
        volumeValue: number;
        onPP: () => void;
        onFs: () => void;
        onCap: () => void;
        onMute: () => void;
        onVolChange: (e: any) => void;
        progressClicked: (e: any) => void;
        '*blocksRegistry': Set<Block>;
    };
    /**
     * @private
     * @param {String} input
     */
    private _getUrl;
    /**
     * @private
     * @param {Object<string, any>} desc
     */
    private _desc2attrs;
    /**
     * @private
     * @param {Number} seconds
     */
    private _timeFmt;
    /** @private */
    private _initTracks;
    /** @private */
    private _castAttributes;
    /**
     * @private
     * @type {HTMLVideoElement}
     */
    private _video;
}
export namespace Video {
    const template: string;
}
import { Block } from '../../abstract/Block.js';
//# sourceMappingURL=Video.d.ts.map