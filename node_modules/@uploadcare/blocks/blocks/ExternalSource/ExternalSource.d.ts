/**
 * @typedef {Object} ActivityParams
 * @property {String} externalSourceType
 */
export class ExternalSource extends UploaderBlock {
    activityType: "external";
    init$: {
        activityIcon: string;
        activityCaption: string;
        counter: number;
        onDone: () => void;
        onCancel: () => void;
        '*commonProgress': number;
        '*uploadList': never[];
        '*outputData': null;
        '*focusedEntry': null;
        '*uploadMetadata': null;
        '*currentActivity': string;
        '*currentActivityParams': {};
        '*history': never[];
        '*historyBack': null;
        '*closeModal': () => void;
        '*blocksRegistry': Set<import("../../index.js").Block>;
    };
    /** @private */
    private _iframe;
    sendMessage(message: any): void;
    handleFileSelected(message: any): Promise<void>;
    handleIframeLoad(): void;
    _inheritedUpdateCssData: () => void;
    getCssValue(propName: any): string;
    applyStyles(): void;
    remoteUrl(): string;
    mountIframe(): void;
    unmountIframe(): void;
}
export namespace ExternalSource {
    const template: string;
}
export type ActivityParams = {
    externalSourceType: string;
};
import { UploaderBlock } from '../../abstract/UploaderBlock.js';
//# sourceMappingURL=ExternalSource.d.ts.map