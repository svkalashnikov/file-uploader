export class CropFrame extends Block {
    init$: {
        dragging: boolean;
        '*blocksRegistry': Set<Block>;
    };
    /** @private */
    private _handlePointerUp;
    /** @private */
    private _handlePointerMove;
    /** @private */
    private _handleSvgPointerMove;
    _shouldThumbBeDisabled(direction: any): any;
    _createBackdrop(): void;
    _backdropMask: SVGElement | undefined;
    _backdropMaskInner: SVGElement | undefined;
    /** Super tricky workaround for the chromium bug See https://bugs.chromium.org/p/chromium/issues/detail?id=330815 */
    _resizeBackdrop(): void;
    _updateBackdrop(): void;
    _updateFrame(): void;
    _createThumbs(): {};
    _createGuides(): SVGElement;
    _createFrame(): void;
    _frameThumbs: {} | undefined;
    _frameGuides: SVGElement | undefined;
    _handlePointerDown(direction: any, e: any): void;
    _draggingThumb: any;
    _dragStartPoint: number[] | undefined;
    /** @type {import('./types.js').Rectangle} */
    _dragStartCrop: import("./types.js").Rectangle | undefined;
    _handlePointerUp_(e: any): void;
    _handlePointerMove_(e: any): void;
    _handleSvgPointerMove_(e: any): void;
    _hoverThumb: any;
    _updateCursor(): void;
    _render(): void;
    toggleThumbs(visible: any): void;
    _guidesHidden: boolean | undefined;
}
export namespace CropFrame {
    const template: string;
}
import { Block } from '../../../abstract/Block.js';
//# sourceMappingURL=CropFrame.d.ts.map