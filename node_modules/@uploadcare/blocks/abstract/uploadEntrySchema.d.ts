/**
 * @typedef {Object} UploadEntry
 * @property {File} file
 * @property {String} externalUrl
 * @property {String} fileName
 * @property {number} fileSize
 * @property {number} lastModified
 * @property {number} uploadProgress
 * @property {String} uuid
 * @property {Boolean} isImage
 * @property {String} mimeType
 * @property {Error} uploadError
 * @property {String} validationErrorMsg
 * @property {String} ctxName
 * @property {String} cdnUrl
 * @property {String} cdnUrlModifiers
 * @property {UploadcareFile} fileInfo
 * @property {Boolean} isUploading
 */
/** @type {{ [key in keyof UploadEntry]: { type; value; nullable?: Boolean } }} */
export const uploadEntrySchema: {
    file: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    externalUrl: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    fileName: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    fileSize: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    lastModified: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    uploadProgress: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    uuid: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    isImage: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    mimeType: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    uploadError: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    validationErrorMsg: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    ctxName: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    cdnUrl: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    cdnUrlModifiers: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    fileInfo: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
    isUploading: {
        type: any;
        value: any;
        nullable?: boolean | undefined;
    };
};
export type UploadEntry = {
    file: File;
    externalUrl: string;
    fileName: string;
    fileSize: number;
    lastModified: number;
    uploadProgress: number;
    uuid: string;
    isImage: boolean;
    mimeType: string;
    uploadError: Error;
    validationErrorMsg: string;
    ctxName: string;
    cdnUrl: string;
    cdnUrlModifiers: string;
    fileInfo: UploadcareFile;
    isUploading: boolean;
};
import { UploadcareFile } from '@uploadcare/upload-client';
//# sourceMappingURL=uploadEntrySchema.d.ts.map